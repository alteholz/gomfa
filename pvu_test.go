package gomfa

import (
	"testing"
)

func BenchmarkPvu(b *testing.B) {
	var pv [2][3]float64
	var upv [2][3]float64

	pv[0][0] = 126668.5912743160734
	pv[0][1] = 2136.792716839935565
	pv[0][2] = -245251.2339876830229

	pv[1][0] = -0.4051854035740713039e-2
	pv[1][1] = -0.6253919754866175788e-2
	pv[1][2] = 0.1189353719774107615e-1

	for i := 0; i < 1000000; i++ {
		Pvu(2920.0, &pv, &upv)
	}
}

func TestPvu(t *testing.T) {
	var pv [2][3]float64
	var upv [2][3]float64

	pv[0][0] = 126668.5912743160734
	pv[0][1] = 2136.792716839935565
	pv[0][2] = -245251.2339876830229

	pv[1][0] = -0.4051854035740713039e-2
	pv[1][1] = -0.6253919754866175788e-2
	pv[1][2] = 0.1189353719774107615e-1

	Pvu(2920.0, &pv, &upv)

	if !CheckFloat(upv[0][0], 126656.7598605317105, 1e-6) {
		t.Errorf("upv[0][0] != 126656.7598605317105\n")
	}
	if !CheckFloat(upv[0][1], 2118.531271155726332, 1e-8) {
		t.Errorf("upv[0][1] != 2118.531271155726332\n")
	}
	if !CheckFloat(upv[0][2], -245216.5048590656190, 1e-6) {
		t.Errorf("upv[0][2] != -245216.5048590656190\n")
	}

	if !CheckFloat(upv[1][0], -0.4051854035740713039e-2, 1e-12) {
		t.Errorf("upv[1][0] != -0.4051854035740713039e-2\n")
	}
	if !CheckFloat(upv[1][1], -0.6253919754866175788e-2, 1e-12) {
		t.Errorf("upv[1][1] != -0.6253919754866175788e-2\n")
	}
	if !CheckFloat(upv[1][2], 0.1189353719774107615e-1, 1e-12) {
		t.Errorf("upv[1][2] != 0.1189353719774107615e-1\n")
	}

}
