package gomfa

import (
	"testing"
)

func BenchmarkFw2m(b *testing.B) {
	var gamb, phib, psi, eps float64
	var r [3][3]float64

	gamb = -0.2243387670997992368e-5
	phib = 0.4091014602391312982
	psi = -0.9501954178013015092e-3
	eps = 0.4091014316587367472

	for i := 0; i < 10000000; i++ {
		Fw2m(gamb, phib, psi, eps, &r)
	}
}

func TestFw2m(t *testing.T) {
	var gamb, phib, psi, eps float64
	var r [3][3]float64

	gamb = -0.2243387670997992368e-5
	phib = 0.4091014602391312982
	psi = -0.9501954178013015092e-3
	eps = 0.4091014316587367472

	Fw2m(gamb, phib, psi, eps, &r)

	if !CheckFloat(r[0][0], 0.9999995505176007047, 1e-12) {
		t.Errorf("r[0][0] !=  0.9999995505176007047 -> %v\n", r[0][0])
	}
	if !CheckFloat(r[0][1], 0.8695404617348192957e-3, 1e-12) {
		t.Errorf("r[0][1] !=  0.8695404617348192957e-3 -> %v\n", r[0][1])
	}
	if !CheckFloat(r[0][2], 0.3779735201865582571e-3, 1e-12) {
		t.Errorf("r[0][2] !=  0.3779735201865582571e-3 -> %v\n", r[0][2])
	}

	if !CheckFloat(r[1][0], -0.8695404723772016038e-3, 1e-12) {
		t.Errorf("r[1][0] !=  -0.8695404723772016038e-3 -> %v\n", r[1][0])
	}
	if !CheckFloat(r[1][1], 0.9999996219496027161, 1e-12) {
		t.Errorf("r[1][1] !=  0.9999996219496027161 -> %v\n", r[1][1])
	}
	if !CheckFloat(r[1][2], -0.1361752496887100026e-6, 1e-12) {
		t.Errorf("r[1][2] !=  -0.1361752496887100026e-6 -> %v\n", r[1][2])
	}

	if !CheckFloat(r[2][0], -0.3779734957034082790e-3, 1e-12) {
		t.Errorf("r[2][0] !=  -0.3779734957034082790e-3 -> %v\n", r[2][0])
	}
	if !CheckFloat(r[2][1], -0.1924880848087615651e-6, 1e-12) {
		t.Errorf("r[2][1] !=  -0.1924880848087615651e-6 -> %v\n", r[2][1])
	}
	if !CheckFloat(r[2][2], 0.9999999285679971958, 1e-12) {
		t.Errorf("r[2][2] !=  0.9999999285679971958 -> %v\n", r[2][2])
	}
}
